import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.types import LabeledPrice
from aiogram.types.message import ContentType
from flask import Flask
from threading import Thread

# === Flask –¥–ª—è keep_alive ===
app = Flask('')

@app.route('/')
def home():
    return "–ë–æ—Ç –∂–∏–≤! üéµ"

def run():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run)
    t.start()

# === Telegram Bot ===
BOT_TOKEN = os.environ.get("BOT_TOKEN")  # —Å—Ç–∞–≤–∏—à—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω
PROVIDER_TOKEN = os.environ.get("PROVIDER_TOKEN")  # —Ç–æ–∫–µ–Ω –ø–ª–∞—Ç–µ–∂–µ–π

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ê–ª—å–±–æ–º
album = {
    "title": "–î–æ—Å—Ç—É–ø –∫ –Ω–∞—à–µ–π –º—É–∑—ã–∫–µ",
    "description": "–ñ–∏–≤–∞—è –∑–∞–ø–∏—Å—å —Å –∫–æ–Ω—Ü–µ—Ä—Ç–∞, –±–µ–∑ —Å—Ç—É–¥–∏–π–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏!",
    "price": 50000,  # –≤ –∫–æ–ø–µ–π–∫–∞—Ö
    "download_link": "https://disk.yandex.ru/d/ZGdxYMizv8M78g"
}

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ===
@dp.message(commands=["start"])
async def start(msg: types.Message):
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton(
        text="–î–æ—Å—Ç—É–ø –∫ –Ω–∞—à–µ–π –º—É–∑—ã–∫–µ",
        callback_data="buy_album"
    ))
    keyboard.add(InlineKeyboardButton(
        text="–ü–æ–¥–¥–µ—Ä–∂–∫–∞",
        url="https://t.me/bill_yagyaev"
    ))
    keyboard.add(InlineKeyboardButton(
        text="–°–∞–π—Ç –≥—Ä—É–ø–ø—ã",
        url="https://twoviolins.ru"
    ))
    await msg.answer("–ü—Ä–∏–≤–µ—Ç! –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –º—É–∑—ã–∫–µ.", reply_markup=keyboard)

@dp.callback_query(lambda c: c.data == "buy_album")
async def buy_album(query: types.CallbackQuery):
    prices = [LabeledPrice(label=album["title"], amount=album["price"])]
    await bot.send_invoice(
        chat_id=query.from_user.id,
        title=album["title"],
        description=album["description"],
        provider_token=PROVIDER_TOKEN,
        currency="RUB",
        prices=prices,
        start_parameter="buy-album",
        payload=album["title"],
    )

@dp.pre_checkout_query()
async def checkout(query: types.PreCheckoutQuery):
    await query.answer(ok=True)

@dp.message(content_types=[ContentType.SUCCESSFUL_PAYMENT])
async def payment_success(msg: types.Message):
    await msg.answer(f"–°–ø–∞—Å–∏–±–æ! –í–æ—Ç —Ç–≤–æ—è —Å—Å—ã–ª–∫–∞: {album['download_link']}")

# === –ó–∞–ø—É—Å–∫ ===
if __name__ == "__main__":
    keep_alive()
    asyncio.run(dp.start_polling(bot))
